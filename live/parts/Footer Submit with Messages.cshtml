@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
<div class="mb-3 row">
  <!-- form error messages, invisible at first -->
  <div class='@(Kit.Css.Is("bs3") ? "col col-xs-12" : "col-12")'>
    @AddHiddenMessage(Resources.MessageFormIncomplete, "danger", "msgIncomplete")
    @AddHiddenMessage(Resources.MessageRecaptchaMissing, "danger", "msgRecap")
    @AddHiddenMessage(Resources.MessageSendError, "danger", "msgError")
    @AddHiddenMessage(Resources.MessageSending, "warning", "msgSending")
    @AddHiddenMessage(Resources.MessageNewsletterSuccess, "success", "msgNewsletterSuccess")
    @AddHiddenMessage(Resources.MessageNewsletterUnexpectedError, "danger", "msgNewsletterFailed")

    <div id="msgOk" class="alert alert-success app-mobius5-message" role="alert">
      @Html.Raw(Resources.MessageSendOk)
      @Html.Raw(Content.CustomerSend != null && Content.CustomerSend ? Resources.MessageCustomerMailSend : "")
    </div>

    @if (Edit.Enabled && (Content.CustomerSend || Content.OwnerSend) && !Text.Has(Content.MailFrom) && !Text.Has(Settings.DefaultMailFrom)) {
      <div class="alert alert-warning">
        @Html.Raw(Kit.Scrub.Only(Resources.MessageMailFromError, "p"))
      </div>
    }

    @if (Edit.Enabled && Content.OwnerSend && !Text.Has(Content.OwnerMail) && !Text.Has(Settings.DefaultOwnerMail)) {
      <div class="alert alert-warning">
        @Html.Raw(Kit.Scrub.Only(Resources.MessageMailOwnerError, "p"))
      </div>
    }
  </div>

  <!-- send button -->
  <div class='@(Kit.Css.Is("bs3") ? "col col-xs-12" : "col-12")'>
    <button app-mobius5-send type="button" class="btn btn-primary">@Resources.ButtonSend</button>
  </div>
</div>

@functions {
  dynamic AddHiddenMessage(string message, string type = "warning", string id = "", string attribute = "") {
    var classes = "alert alert-" + type + " app-mobius5-message";
    var rawMessage = Html.Raw(Kit.Scrub.Only(message, "p"));
    var messageDiv = Tag.Div(rawMessage).Class(classes).Id(id).Attr("role", "alert");
    if (attribute != "") { messageDiv.Attr(attribute, ""); }
    return messageDiv;
  }
}
