// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "AppSettings.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class AppSettings
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator v17.04.01
// App/Edition: Mobius Forms 6/staging
// User:        2sic Web-Developer
// When:        2024-03-18 14:34:38Z
namespace AppCode.Data
{
  // This is a generated class for AppSettings (scope: System.App)
  // To extend/modify it, see instructions above.

  /// <summary>
  /// AppSettings data. <br/>
  /// Generated 2024-03-18 14:34:38Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.AdminHasPermission`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  /// <remarks>
  /// This Content-Type is NOT in the default scope, so you may not see it in the Admin UI. It's in the scope System.App.
  /// </remarks>
  public partial class AppSettings: AutoGenerated.ZagAppSettings
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for System.App.AppSettings in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagAppSettings: Custom.Data.CustomItem
  {
    /// <summary>
    /// AdminHasPermission as bool. <br/>
    /// To get nullable use .Get("AdminHasPermission") as bool?;
    /// </summary>
    public bool AdminHasPermission => _item.Bool("AdminHasPermission");

    /// <summary>
    /// DefaultMailFrom as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DefaultMailFrom", scrubHtml: true) etc.
    /// </summary>
    public string DefaultMailFrom => _item.String("DefaultMailFrom", fallback: "");

    /// <summary>
    /// DefaultOwnerMail as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DefaultOwnerMail", scrubHtml: true) etc.
    /// </summary>
    public string DefaultOwnerMail => _item.String("DefaultOwnerMail", fallback: "");

    /// <summary>
    /// GdprEnabled as bool. <br/>
    /// To get nullable use .Get("GdprEnabled") as bool?;
    /// </summary>
    public bool GdprEnabled => _item.Bool("GdprEnabled");

    /// <summary>
    /// MailchimpAPIKey as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailchimpAPIKey", scrubHtml: true) etc.
    /// </summary>
    public string MailchimpAPIKey => _item.String("MailchimpAPIKey", fallback: "");

    /// <summary>
    /// MailchimpListId as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailchimpListId", scrubHtml: true) etc.
    /// </summary>
    public string MailchimpListId => _item.String("MailchimpListId", fallback: "");

    /// <summary>
    /// MailchimpServer as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailchimpServer", scrubHtml: true) etc.
    /// </summary>
    public string MailchimpServer => _item.String("MailchimpServer", fallback: "");

    /// <summary>
    /// MailChimpShowWarning as bool. <br/>
    /// To get nullable use .Get("MailChimpShowWarning") as bool?;
    /// </summary>
    public bool MailChimpShowWarning => _item.Bool("MailChimpShowWarning");

    /// <summary>
    /// TermsAndGdprCombined as bool. <br/>
    /// To get nullable use .Get("TermsAndGdprCombined") as bool?;
    /// </summary>
    public bool TermsAndGdprCombined => _item.Bool("TermsAndGdprCombined");

    /// <summary>
    /// TermsEnabled as bool. <br/>
    /// To get nullable use .Get("TermsEnabled") as bool?;
    /// </summary>
    public bool TermsEnabled => _item.Bool("TermsEnabled");
  }
}