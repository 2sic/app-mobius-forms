{"version":3,"file":"scripts.min.js","mappings":"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","sources":["webpack://app-mobius-forms5/./node_modules/pristinejs/dist/pristine.js","webpack://app-mobius-forms5/./src/ts/index.ts","webpack://app-mobius-forms5/./src/ts/lib-2sxc-alerts.ts","webpack://app-mobius-forms5/./src/ts/lib-2sxc-forms.ts","webpack://app-mobius-forms5/./src/ts/lib-2sxc-recaptcha.ts","webpack://app-mobius-forms5/./src/ts/lib-2sxc-tracking.ts","webpack://app-mobius-forms5/webpack/bootstrap","webpack://app-mobius-forms5/webpack/startup"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Pristine = factory());\n}(this, (function () { 'use strict';\n\n    var lang = {\n        required: \"This field is required\",\n        email: \"This field requires a valid e-mail address\",\n        number: \"This field requires a number\",\n        integer: \"This field requires an integer value\",\n        url: \"This field requires a valid website URL\",\n        tel: \"This field requires a valid telephone number\",\n        maxlength: \"This fields length must be < ${1}\",\n        minlength: \"This fields length must be > ${1}\",\n        min: \"Minimum value for this field is ${1}\",\n        max: \"Maximum value for this field is ${1}\",\n        pattern: \"Please match the requested format\"\n    };\n\n    function findAncestor(el, cls) {\n        while ((el = el.parentElement) && !el.classList.contains(cls)) {}\n        return el;\n    }\n\n    function tmpl(o) {\n        var _arguments = arguments;\n\n        return this.replace(/\\${([^{}]*)}/g, function (a, b) {\n            return _arguments[b];\n        });\n    }\n\n    function groupedElemCount(input) {\n        return input.pristine.self.form.querySelectorAll('input[name=\"' + input.getAttribute('name') + '\"]:checked').length;\n    }\n\n    function mergeConfig(obj1, obj2) {\n        for (var attr in obj2) {\n            if (!(attr in obj1)) {\n                obj1[attr] = obj2[attr];\n            }\n        }\n        return obj1;\n    }\n\n    function isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n\n    var defaultConfig = {\n        classTo: 'form-group',\n        errorClass: 'has-danger',\n        successClass: 'has-success',\n        errorTextParent: 'form-group',\n        errorTextTag: 'div',\n        errorTextClass: 'text-help'\n    };\n\n    var PRISTINE_ERROR = 'pristine-error';\n    var SELECTOR = \"input:not([type^=hidden]):not([type^=submit]), select, textarea\";\n    var ALLOWED_ATTRIBUTES = [\"required\", \"min\", \"max\", 'minlength', 'maxlength', 'pattern'];\n    var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    var validators = {};\n\n    var _ = function _(name, validator) {\n        validator.name = name;\n        if (!validator.msg) validator.msg = lang[name];\n        if (validator.priority === undefined) validator.priority = 1;\n        validators[name] = validator;\n    };\n\n    _('text', { fn: function fn(val) {\n            return true;\n        }, priority: 0 });\n    _('required', { fn: function fn(val) {\n            return this.type === 'radio' || this.type === 'checkbox' ? groupedElemCount(this) : val !== undefined && val !== '';\n        }, priority: 99, halt: true });\n    _('email', { fn: function fn(val) {\n            return !val || EMAIL_REGEX.test(val);\n        } });\n    _('number', { fn: function fn(val) {\n            return !val || !isNaN(parseFloat(val));\n        }, priority: 2 });\n    _('integer', { fn: function fn(val) {\n            return !val || /^\\d+$/.test(val);\n        } });\n    _('minlength', { fn: function fn(val, length) {\n            return !val || val.length >= parseInt(length);\n        } });\n    _('maxlength', { fn: function fn(val, length) {\n            return !val || val.length <= parseInt(length);\n        } });\n    _('min', { fn: function fn(val, limit) {\n            return !val || (this.type === 'checkbox' ? groupedElemCount(this) >= parseInt(limit) : parseFloat(val) >= parseFloat(limit));\n        } });\n    _('max', { fn: function fn(val, limit) {\n            return !val || (this.type === 'checkbox' ? groupedElemCount(this) <= parseInt(limit) : parseFloat(val) <= parseFloat(limit));\n        } });\n    _('pattern', { fn: function fn(val, pattern) {\n            var m = pattern.match(new RegExp('^/(.*?)/([gimy]*)$'));return !val || new RegExp(m[1], m[2]).test(val);\n        } });\n\n    function Pristine(form, config, live) {\n\n        var self = this;\n\n        init(form, config, live);\n\n        function init(form, config, live) {\n\n            form.setAttribute(\"novalidate\", \"true\");\n\n            self.form = form;\n            self.config = mergeConfig(config || {}, defaultConfig);\n            self.live = !(live === false);\n            self.fields = Array.from(form.querySelectorAll(SELECTOR)).map(function (input) {\n\n                var fns = [];\n                var params = {};\n                var messages = {};\n\n                [].forEach.call(input.attributes, function (attr) {\n                    if (/^data-pristine-/.test(attr.name)) {\n                        var name = attr.name.substr(14);\n                        if (name.endsWith('-message')) {\n                            messages[name.slice(0, name.length - 8)] = attr.value;\n                            return;\n                        }\n                        if (name === 'type') name = attr.value;\n                        _addValidatorToField(fns, params, name, attr.value);\n                    } else if (~ALLOWED_ATTRIBUTES.indexOf(attr.name)) {\n                        _addValidatorToField(fns, params, attr.name, attr.value);\n                    } else if (attr.name === 'type') {\n                        _addValidatorToField(fns, params, attr.value);\n                    }\n                });\n\n                fns.sort(function (a, b) {\n                    return b.priority - a.priority;\n                });\n\n                self.live && input.addEventListener(!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change', function (e) {\n                    self.validate(e.target);\n                }.bind(self));\n\n                return input.pristine = { input: input, validators: fns, params: params, messages: messages, self: self };\n            }.bind(self));\n        }\n\n        function _addValidatorToField(fns, params, name, value) {\n            var validator = validators[name];\n            if (validator) {\n                fns.push(validator);\n                if (value) {\n                    var valueParams = value.split(',');\n                    valueParams.unshift(null); // placeholder for input's value\n                    params[name] = valueParams;\n                }\n            }\n        }\n\n        /***\n         * Checks whether the form/input elements are valid\n         * @param input => input element(s) or a jquery selector, null for full form validation\n         * @param silent => do not show error messages, just return true/false\n         * @returns {boolean} return true when valid false otherwise\n         */\n        self.validate = function (input, silent) {\n            silent = input && silent === true || input === true;\n            var fields = self.fields;\n            if (input !== true && input !== false) {\n                if (input instanceof HTMLElement) {\n                    fields = [input.pristine];\n                } else if (input instanceof NodeList || input instanceof (window.$ || Array) || input instanceof Array) {\n                    fields = Array.from(input).map(function (el) {\n                        return el.pristine;\n                    });\n                }\n            }\n\n            var valid = true;\n\n            for (var i = 0; fields[i]; i++) {\n                var field = fields[i];\n                if (_validateField(field)) {\n                    !silent && _showSuccess(field);\n                } else {\n                    valid = false;\n                    !silent && _showError(field);\n                }\n            }\n            return valid;\n        };\n\n        /***\n         * Get errors of a specific field or the whole form\n         * @param input\n         * @returns {Array|*}\n         */\n        self.getErrors = function (input) {\n            if (!input) {\n                var erroneousFields = [];\n                for (var i = 0; i < self.fields.length; i++) {\n                    var field = self.fields[i];\n                    if (field.errors.length) {\n                        erroneousFields.push({ input: field.input, errors: field.errors });\n                    }\n                }\n                return erroneousFields;\n            }\n            if (input.tagName && input.tagName.toLowerCase() === \"select\") {\n                return input.pristine.errors;\n            }\n            return input.length ? input[0].pristine.errors : input.pristine.errors;\n        };\n\n        /***\n         * Validates a single field, all validator functions are called and error messages are generated\n         * when a validator fails\n         * @param field\n         * @returns {boolean}\n         * @private\n         */\n        function _validateField(field) {\n            var errors = [];\n            var valid = true;\n            for (var i = 0; field.validators[i]; i++) {\n                var validator = field.validators[i];\n                var params = field.params[validator.name] ? field.params[validator.name] : [];\n                params[0] = field.input.value;\n                if (!validator.fn.apply(field.input, params)) {\n                    valid = false;\n\n                    if (isFunction(validator.msg)) {\n                        errors.push(validator.msg(field.input.value, params));\n                    } else {\n                        var error = field.messages[validator.name] || validator.msg;\n                        errors.push(tmpl.apply(error, params));\n                    }\n\n                    if (validator.halt === true) {\n                        break;\n                    }\n                }\n            }\n            field.errors = errors;\n            return valid;\n        }\n\n        /***\n         *\n         * @param elem => The dom element where the validator is applied to\n         * @param fn => validator function\n         * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n         * so on are for the attribute values\n         * @param priority => priority of the validator function, higher valued function gets called first.\n         * @param halt => whether validation should stop for this field after current validation function\n         */\n        self.addValidator = function (elem, fn, msg, priority, halt) {\n            if (elem instanceof HTMLElement) {\n                elem.pristine.validators.push({ fn: fn, msg: msg, priority: priority, halt: halt });\n                elem.pristine.validators.sort(function (a, b) {\n                    return b.priority - a.priority;\n                });\n            } else {\n                console.warn(\"The parameter elem must be a dom element\");\n            }\n        };\n\n        /***\n         * An utility function that returns a 2-element array, first one is the element where error/success class is\n         * applied. 2nd one is the element where error message is displayed. 2nd element is created if doesn't exist and cached.\n         * @param field\n         * @returns {*}\n         * @private\n         */\n        function _getErrorElements(field) {\n            if (field.errorElements) {\n                return field.errorElements;\n            }\n            var errorClassElement = findAncestor(field.input, self.config.classTo);\n            var errorTextParent = null,\n                errorTextElement = null;\n            if (self.config.classTo === self.config.errorTextParent) {\n                errorTextParent = errorClassElement;\n            } else {\n                errorTextParent = errorClassElement.querySelector('.' + self.config.errorTextParent);\n            }\n            if (errorTextParent) {\n                errorTextElement = errorTextParent.querySelector('.' + PRISTINE_ERROR);\n                if (!errorTextElement) {\n                    errorTextElement = document.createElement(self.config.errorTextTag);\n                    errorTextElement.className = PRISTINE_ERROR + ' ' + self.config.errorTextClass;\n                    errorTextParent.appendChild(errorTextElement);\n                    errorTextElement.pristineDisplay = errorTextElement.style.display;\n                }\n            }\n            return field.errorElements = [errorClassElement, errorTextElement];\n        }\n\n        function _showError(field) {\n            var errorElements = _getErrorElements(field);\n            var errorClassElement = errorElements[0],\n                errorTextElement = errorElements[1];\n\n            if (errorClassElement) {\n                errorClassElement.classList.remove(self.config.successClass);\n                errorClassElement.classList.add(self.config.errorClass);\n            }\n            if (errorTextElement) {\n                errorTextElement.innerHTML = field.errors.join('<br/>');\n                errorTextElement.style.display = errorTextElement.pristineDisplay || '';\n            }\n        }\n\n        /***\n         * Adds error to a specific field\n         * @param input\n         * @param error\n         */\n        self.addError = function (input, error) {\n            input = input.length ? input[0] : input;\n            input.pristine.errors.push(error);\n            _showError(input.pristine);\n        };\n\n        function _removeError(field) {\n            var errorElements = _getErrorElements(field);\n            var errorClassElement = errorElements[0],\n                errorTextElement = errorElements[1];\n            if (errorClassElement) {\n                // IE > 9 doesn't support multiple class removal\n                errorClassElement.classList.remove(self.config.errorClass);\n                errorClassElement.classList.remove(self.config.successClass);\n            }\n            if (errorTextElement) {\n                errorTextElement.innerHTML = '';\n                errorTextElement.style.display = 'none';\n            }\n            return errorElements;\n        }\n\n        function _showSuccess(field) {\n            var errorClassElement = _removeError(field)[0];\n            errorClassElement && errorClassElement.classList.add(self.config.successClass);\n        }\n\n        /***\n         * Resets the errors\n         */\n        self.reset = function () {\n            for (var i = 0; self.fields[i]; i++) {\n                self.fields[i].errorElements = null;\n            }\n            Array.from(self.form.querySelectorAll('.' + PRISTINE_ERROR)).map(function (elem) {\n                elem.parentNode.removeChild(elem);\n            });\n            Array.from(self.form.querySelectorAll('.' + self.config.classTo)).map(function (elem) {\n                elem.classList.remove(self.config.successClass);\n                elem.classList.remove(self.config.errorClass);\n            });\n        };\n\n        /***\n         * Resets the errors and deletes all pristine fields\n         */\n        self.destroy = function () {\n            self.reset();\n            self.fields.forEach(function (field) {\n                delete field.input.pristine;\n            });\n            self.fields = [];\n        };\n\n        self.setGlobalConfig = function (config) {\n            defaultConfig = config;\n        };\n\n        return self;\n    }\n\n    /***\n     *\n     * @param name => Name of the global validator\n     * @param fn => validator function\n     * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n     * so on are for the attribute values\n     * @param priority => priority of the validator function, higher valued function gets called first.\n     * @param halt => whether validation should stop for this field after current validation function\n     */\n    Pristine.addValidator = function (name, fn, msg, priority, halt) {\n        _(name, { fn: fn, msg: msg, priority: priority, halt: halt });\n    };\n\n    return Pristine;\n\n})));\n","import { showAlert } from \"./lib-2sxc-alerts\";\r\nimport {\r\n  disableInputs,\r\n  enableInputs,\r\n  getFormValues,\r\n  sendForm,\r\n  validateForm,\r\n} from \"./lib-2sxc-forms\";\r\nimport { PristineOptions } from \"./lib-2sxc-pristine-options\";\r\nimport { getRecaptchaToken, requiresRecaptcha } from \"./lib-2sxc-recaptcha\";\r\nimport { addTrackingEvent } from \"./lib-2sxc-tracking\";\r\n\r\nconst debug = false;\r\n\r\nvar winAny = window as any;\r\nwinAny.appMobius5 ??= {};\r\nwinAny.appMobius5.init ??= initAppMobius5;\r\n\r\nfunction initAppMobius5({\r\n  domAttribute,\r\n  webApiUrl,\r\n  validationOptions,\r\n}: {\r\n  domAttribute: string;\r\n  webApiUrl: string;\r\n  validationOptions: PristineOptions;\r\n}) {\r\n  if (debug) console.log(\"Mobius5 loading, debug is enabled\", domAttribute);\r\n  if (document.getElementsByTagName(\"form\").length)\r\n    document.getElementsByTagName(\"form\")[0].setAttribute(\"novalidate\", \"\");\r\n\r\n  const mobiusWrapper = document.querySelectorAll(`[${domAttribute}]`)[0];\r\n\r\n  if (!mobiusWrapper) return;\r\n\r\n  const submitButtom = mobiusWrapper.querySelectorAll(\r\n    \"[app-mobius5-send]\"\r\n  )[0] as HTMLButtonElement;\r\n  submitButtom.addEventListener(\"click\", async (event: Event) => {\r\n    event.preventDefault();\r\n\r\n    const eventBtn = event.currentTarget as HTMLElement;\r\n    addTrackingEvent(\"trackMobiusForm\", \"mobius-form\", eventBtn.innerText);\r\n\r\n    var valid = validateForm(mobiusWrapper, validationOptions);\r\n    if (!valid) {\r\n      showAlert(mobiusWrapper, \"msgIncomplete\");\r\n      return;\r\n    }\r\n\r\n    const formValues = await getFormValues(mobiusWrapper);\r\n\r\n    if (requiresRecaptcha(mobiusWrapper)) {\r\n      let token = await getRecaptchaToken(mobiusWrapper);\r\n      if (!token) return showAlert(mobiusWrapper, \"msgRecap\");\r\n\r\n      // set token for backend\r\n      formValues.Recaptcha = token;\r\n    }\r\n\r\n    const mailchimp = mobiusWrapper.classList.contains(\"app-mobius5-mailchimp\");\r\n    formValues.MailChimp = mailchimp;\r\n\r\n    // imply that message is sending by ui modifications\r\n\r\n    disableInputs(mobiusWrapper, true);\r\n    showAlert(mobiusWrapper, \"msgSending\");\r\n\r\n    //#region request handling\r\n\r\n    let endpoint = webApiUrl; // (should be \"Form/ProcessForm\" or a custom override)\r\n\r\n    sendForm(formValues, submitButtom, endpoint).then((result: any) => {\r\n      // error\r\n      if (!result.ok) {\r\n        if (debug) console.log(\"error\", result.status);\r\n\r\n        showAlert(mobiusWrapper, \"msgError\");\r\n        enableInputs(mobiusWrapper);\r\n\r\n        addTrackingEvent(\r\n          \"trackMobiusForm\",\r\n          \"mobius-form\",\r\n          submitButtom.innerText\r\n        );\r\n        return;\r\n      }\r\n\r\n      // success\r\n      if (debug) console.log(\"success\", result);\r\n      submitButtom.setAttribute(\"disabled\", \"\");\r\n\r\n      showAlert(mobiusWrapper, \"msgOk\");\r\n      disableInputs(mobiusWrapper, false);\r\n\r\n      addTrackingEvent(\r\n        \"trackMobiusForm\",\r\n        \"mobius-form\",\r\n        submitButtom.innerText\r\n      );\r\n    });\r\n\r\n    //#endregion\r\n  });\r\n}\r\n","/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms5\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/ \r\n\r\n// .alert class needs to be included in alert message\r\nexport function showAlert(wrapper: Element, responseMessageElement: string) {\r\n  wrapper.querySelectorAll('.alert').forEach((elem: HTMLElement) => elem.style.display = 'none');\r\n  if (responseMessageElement !== '') (wrapper.querySelector(`#${responseMessageElement}`) as HTMLElement).style.display = 'block';\r\n}","import { CommandNames } from \"@2sic.com/2sxc-typings\";\r\nimport { PristineOptions } from \"./lib-2sxc-pristine-options\";\r\n\r\nlet Pristine = require(\"../../node_modules/pristinejs\");\r\ndeclare let $2sxc: any;\r\n\r\n/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms5\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/\r\n\r\nconst promiseFileMap = (file: { Encoded: Promise<unknown> }) => {\r\n  if (!file.Encoded) return file;\r\n  return new Promise((resolve) => {\r\n    file.Encoded.then((result) => resolve({ ...file, Encoded: result }));\r\n  });\r\n};\r\n\r\n// automatically build the send-object with all properties,\r\n// based on all form-fields which have a item-property=\"\"\r\nexport async function getFormValues(formWrapper: Element): Promise<any> {\r\n  let data: any = {\r\n    Files: [],\r\n    Fields: {},\r\n    Terms: {},\r\n  };\r\n\r\n  const fields = formWrapper.querySelectorAll(\"input,textarea,select\");\r\n  fields.forEach((formField: HTMLInputElement) => {\r\n    const fieldKey = getFieldKey(formField);\r\n    if (!fieldKey || !formField.value) return;\r\n\r\n    // If it is an attachment then add it to Files\r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      formField.getAttribute(\"type\").toLowerCase() == \"file\"\r\n    ) {\r\n      data[\"Files\"].push({\r\n        ...(getFieldValue(formField) as object),\r\n        Field: fieldKey,\r\n      });\r\n      return;\r\n    }\r\n    // If Checkbox or Radio not checked, data will not add in the Request \r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      (formField.getAttribute(\"type\").toLowerCase() == \"checkbox\" ||\r\n        formField.getAttribute(\"type\").toLowerCase() == \"radio\") &&\r\n      !formField.checked\r\n    ) {\r\n      return;\r\n    }\r\n    // If the type is a checkbox with an attribute terms, then it will add it to the terms\r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      formField.getAttribute(\"type\").toLowerCase() == \"checkbox\" &&\r\n      formField.getAttribute(\"terms\")\r\n    ) {\r\n      data[\"Terms\"][fieldKey] = getFieldValue(formField);\r\n      return;\r\n    }\r\n    // If it is a normal field, e.g. first name, then it is added to the field.\r\n    data[\"Fields\"][fieldKey] = getFieldValue(formField);\r\n  });\r\n\r\n  return Promise.all(data.Files.map(promiseFileMap)).then((loadedFiles) => {\r\n    return { ...data, Files: loadedFiles };\r\n  });\r\n}\r\n\r\nfunction getFieldKey(formField: HTMLInputElement): string {\r\n  // get the property name from special-attribute, name OR id\r\n  return formField.getAttribute(\"name\") || formField.getAttribute(\"id\");\r\n}\r\n\r\nfunction getFieldValue(\r\n  formField: HTMLInputElement\r\n): { Encoded: Promise<unknown>; Name: string } | unknown {\r\n  // extract data from file fields\r\n  if (!formField.getAttribute(\"type\")) return formField.value;\r\n  switch (formField.getAttribute(\"type\").toLowerCase()) {\r\n    case \"file\":\r\n      const file = formField.files[0];\r\n      if (!file) return;\r\n      return {\r\n        Name: file.name,\r\n        Encoded: new Promise((resolve) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = (e) => {\r\n            resolve(e.target.result);\r\n          };\r\n        }),\r\n      };\r\n    case \"radio\":\r\n      return formField.value;\r\n    case \"checkbox\":\r\n      return formField.checked ? formField.value : \"\";\r\n    default:\r\n      return formField.value;\r\n  }\r\n}\r\n\r\nexport function validateForm(\r\n  formWrapper: Element,\r\n  options: PristineOptions\r\n): boolean {\r\n  const pristine = new Pristine(formWrapper, options);\r\n  return pristine.validate();\r\n}\r\n\r\nexport function sendForm(\r\n  formData: any,\r\n  submitButtom: HTMLButtonElement,\r\n  endpoint: string = \"Form/ProcessForm\"\r\n): Promise<unknown> {\r\n  const sxc = $2sxc(submitButtom);\r\n  // console.log(\"sendform\",formData)\r\n  return sxc.webApi.fetchRaw(endpoint, formData);\r\n}\r\n\r\nexport function disableInputs(wrapper: Element, state: boolean) {\r\n  wrapper.classList.toggle(\"disable\", state);\r\n  wrapper\r\n    .querySelectorAll(\"input,textarea,select\")\r\n    .forEach((elem: HTMLElement) => elem.setAttribute(\"disabled\", \"true\"));\r\n}\r\n\r\nexport function enableInputs(wrapper: Element) {\r\n  wrapper.classList.remove(\"disable\");\r\n  wrapper\r\n    .querySelectorAll(\"input,textarea,select\")\r\n    .forEach((elem: HTMLElement) => elem.setAttribute(\"disabled\", \"false\"));\r\n}\r\n","declare let grecaptcha: any;\r\n\r\n/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms5\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/ \r\n\r\n// Checks if a recaptcha is implemented in the current Form and returns promise with token if existing\r\n\r\nexport function getRecaptchaToken(wrapper: Element) {\r\n  const recap = wrapper.getElementsByClassName('app-mobius5-recaptcha')[0] as HTMLElement;\r\n\r\n  if(!recap) return Promise.resolve(null);\r\n  \r\n  // if many found, probably not ok\r\n  if(wrapper.getElementsByClassName('app-mobius5-recaptcha').length !== 1) throw \"recaptcha not found\";\r\n\r\n  // return promise of google response for the recap\r\n  // null if failed, something cryptic if ok\r\n  return grecaptcha.execute(recap.dataset.sitekey, {action: 'submit'})\r\n}\r\n\r\nexport function requiresRecaptcha(wrapper: Element): boolean {\r\n  if (wrapper.getElementsByClassName('app-mobius5-recaptcha')[0]) return true;\r\n  return false;\r\n}","/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms5\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/ \r\n\r\nexport function addTrackingEvent(trackingEventName: string, trackingCategory: string, trackingLabel: string) {\r\n  const trackingEvent = new CustomEvent(trackingEventName, { detail: { category: trackingCategory, action: 'submit', label: trackingLabel } });\r\n  document.dispatchEvent(trackingEvent);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(294);\n"],"names":["module","exports","lang","required","email","number","integer","url","tel","maxlength","minlength","min","max","pattern","tmpl","o","_arguments","arguments","this","replace","a","b","groupedElemCount","input","pristine","self","form","querySelectorAll","getAttribute","length","defaultConfig","classTo","errorClass","successClass","errorTextParent","errorTextTag","errorTextClass","ALLOWED_ATTRIBUTES","EMAIL_REGEX","validators","_","name","validator","msg","undefined","priority","Pristine","config","live","_addValidatorToField","fns","params","value","push","valueParams","split","unshift","_validateField","field","errors","valid","i","fn","apply","obj","constructor","call","error","messages","halt","_getErrorElements","errorElements","errorClassElement","el","cls","parentElement","classList","contains","findAncestor","errorTextElement","querySelector","document","createElement","className","PRISTINE_ERROR","appendChild","pristineDisplay","style","display","_showError","remove","add","innerHTML","join","_showSuccess","_removeError","setAttribute","obj1","obj2","attr","mergeConfig","fields","Array","from","map","forEach","attributes","test","substr","endsWith","slice","indexOf","sort","addEventListener","e","validate","target","bind","init","silent","HTMLElement","NodeList","window","$","getErrors","erroneousFields","tagName","toLowerCase","addValidator","elem","console","warn","addError","reset","parentNode","removeChild","destroy","setGlobalConfig","val","type","isNaN","parseFloat","parseInt","limit","m","match","RegExp","factory","winAny","appMobius5","domAttribute","webApiUrl","validationOptions","getElementsByTagName","mobiusWrapper","submitButtom","event","preventDefault","eventBtn","currentTarget","addTrackingEvent","innerText","validateForm","getFormValues","showAlert","formValues","requiresRecaptcha","getRecaptchaToken","token","Recaptcha","mailchimp","MailChimp","disableInputs","endpoint","sendForm","then","result","ok","enableInputs","wrapper","responseMessageElement","promiseFileMap","file","Encoded","Promise","resolve","getFieldValue","formField","files","Name","reader","FileReader","readAsDataURL","onload","checked","formWrapper","data","Files","Fields","Terms","fieldKey","getFieldKey","Field","all","loadedFiles","options","formData","$2sxc","webApi","fetchRaw","state","toggle","recap","getElementsByClassName","grecaptcha","execute","dataset","sitekey","action","trackingEventName","trackingCategory","trackingLabel","trackingEvent","CustomEvent","detail","category","label","dispatchEvent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}